{
  "type": "File",
  "start": 0,
  "end": 1819,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 75,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 1819,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 75,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ExportNamedDeclaration",
        "start": 860,
        "end": 1027,
        "loc": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 1
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 867,
          "end": 1027,
          "loc": {
            "start": {
              "line": 34,
              "column": 7
            },
            "end": {
              "line": 39,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 876,
            "end": 879,
            "loc": {
              "start": {
                "line": 34,
                "column": 16
              },
              "end": {
                "line": 34,
                "column": 19
              },
              "identifierName": "ord"
            },
            "name": "ord",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "start": 880,
              "end": 884,
              "loc": {
                "start": {
                  "line": 34,
                  "column": 20
                },
                "end": {
                  "line": 34,
                  "column": 24
                },
                "identifierName": "char"
              },
              "name": "char"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "start": 886,
            "end": 1027,
            "loc": {
              "start": {
                "line": 34,
                "column": 26
              },
              "end": {
                "line": 39,
                "column": 1
              }
            },
            "body": [
              {
                "type": "IfStatement",
                "start": 892,
                "end": 994,
                "loc": {
                  "start": {
                    "line": 35,
                    "column": 4
                  },
                  "end": {
                    "line": 37,
                    "column": 5
                  }
                },
                "test": {
                  "type": "BinaryExpression",
                  "start": 896,
                  "end": 913,
                  "loc": {
                    "start": {
                      "line": 35,
                      "column": 8
                    },
                    "end": {
                      "line": 35,
                      "column": 25
                    }
                  },
                  "left": {
                    "type": "MemberExpression",
                    "start": 896,
                    "end": 907,
                    "loc": {
                      "start": {
                        "line": 35,
                        "column": 8
                      },
                      "end": {
                        "line": 35,
                        "column": 19
                      }
                    },
                    "object": {
                      "type": "Identifier",
                      "start": 896,
                      "end": 900,
                      "loc": {
                        "start": {
                          "line": 35,
                          "column": 8
                        },
                        "end": {
                          "line": 35,
                          "column": 12
                        },
                        "identifierName": "char"
                      },
                      "name": "char"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 901,
                      "end": 907,
                      "loc": {
                        "start": {
                          "line": 35,
                          "column": 13
                        },
                        "end": {
                          "line": 35,
                          "column": 19
                        },
                        "identifierName": "length"
                      },
                      "name": "length"
                    },
                    "computed": false
                  },
                  "operator": "===",
                  "right": {
                    "type": "NumericLiteral",
                    "start": 912,
                    "end": 913,
                    "loc": {
                      "start": {
                        "line": 35,
                        "column": 24
                      },
                      "end": {
                        "line": 35,
                        "column": 25
                      }
                    },
                    "extra": {
                      "rawValue": 0,
                      "raw": "0"
                    },
                    "value": 0
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "start": 915,
                  "end": 994,
                  "loc": {
                    "start": {
                      "line": 35,
                      "column": 27
                    },
                    "end": {
                      "line": 37,
                      "column": 5
                    }
                  },
                  "body": [
                    {
                      "type": "ThrowStatement",
                      "start": 925,
                      "end": 988,
                      "loc": {
                        "start": {
                          "line": 36,
                          "column": 8
                        },
                        "end": {
                          "line": 36,
                          "column": 71
                        }
                      },
                      "argument": {
                        "type": "NewExpression",
                        "start": 931,
                        "end": 987,
                        "loc": {
                          "start": {
                            "line": 36,
                            "column": 14
                          },
                          "end": {
                            "line": 36,
                            "column": 70
                          }
                        },
                        "callee": {
                          "type": "Identifier",
                          "start": 935,
                          "end": 940,
                          "loc": {
                            "start": {
                              "line": 36,
                              "column": 18
                            },
                            "end": {
                              "line": 36,
                              "column": 23
                            },
                            "identifierName": "Error"
                          },
                          "name": "Error"
                        },
                        "arguments": [
                          {
                            "type": "StringLiteral",
                            "start": 941,
                            "end": 986,
                            "loc": {
                              "start": {
                                "line": 36,
                                "column": 24
                              },
                              "end": {
                                "line": 36,
                                "column": 69
                              }
                            },
                            "extra": {
                              "rawValue": "[ord]: char string must not be of length 0.",
                              "raw": "\"[ord]: char string must not be of length 0.\""
                            },
                            "value": "[ord]: char string must not be of length 0."
                          }
                        ]
                      }
                    }
                  ],
                  "directives": []
                },
                "alternate": null
              },
              {
                "type": "ReturnStatement",
                "start": 999,
                "end": 1025,
                "loc": {
                  "start": {
                    "line": 38,
                    "column": 4
                  },
                  "end": {
                    "line": 38,
                    "column": 30
                  }
                },
                "argument": {
                  "type": "CallExpression",
                  "start": 1006,
                  "end": 1024,
                  "loc": {
                    "start": {
                      "line": 38,
                      "column": 11
                    },
                    "end": {
                      "line": 38,
                      "column": 29
                    }
                  },
                  "callee": {
                    "type": "MemberExpression",
                    "start": 1006,
                    "end": 1021,
                    "loc": {
                      "start": {
                        "line": 38,
                        "column": 11
                      },
                      "end": {
                        "line": 38,
                        "column": 26
                      }
                    },
                    "object": {
                      "type": "Identifier",
                      "start": 1006,
                      "end": 1010,
                      "loc": {
                        "start": {
                          "line": 38,
                          "column": 11
                        },
                        "end": {
                          "line": 38,
                          "column": 15
                        },
                        "identifierName": "char"
                      },
                      "name": "char"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 1011,
                      "end": 1021,
                      "loc": {
                        "start": {
                          "line": 38,
                          "column": 16
                        },
                        "end": {
                          "line": 38,
                          "column": 26
                        },
                        "identifierName": "charCodeAt"
                      },
                      "name": "charCodeAt"
                    },
                    "computed": false
                  },
                  "arguments": [
                    {
                      "type": "NumericLiteral",
                      "start": 1022,
                      "end": 1023,
                      "loc": {
                        "start": {
                          "line": 38,
                          "column": 27
                        },
                        "end": {
                          "line": 38,
                          "column": 28
                        }
                      },
                      "extra": {
                        "rawValue": 0,
                        "raw": "0"
                      },
                      "value": 0
                    }
                  ]
                }
              }
            ],
            "directives": [],
            "trailingComments": null
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 24\n * @param\n * {string} char\n * @return\n * {number}\n ",
              "start": 0,
              "end": 100,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 0
                },
                "end": {
                  "line": 10,
                  "column": 3
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n * Returns the character code of the first character in a string.\n * If the length of the string is 0, an error will be thrown\n * (this behaviour can potentially change in a future release).\n *\n * **Note**: There are some characters that take up 2 codes, thus\n * making the string have a length of 2. In this case, the function\n * will only return the first code.\n * @example\n * ord(\"A\"); //> 65\n * ord(\"10\"); // 49\n * ord(\"\");\n * //! Uncaught Error: [ord]: char\n * string must not be of length 0.\n *\n * pipe(chars, map(ord))(\"😈\");\n * //> [55357, 56840]\n * @see {@link chr}\n * @throws {Error}      - When the string is empty.\n * @param {string} char - The string that has the character.\n * @return {number}     - Character code as a number.\n ",
              "start": 101,
              "end": 859,
              "loc": {
                "start": {
                  "line": 11,
                  "column": 0
                },
                "end": {
                  "line": 33,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 54\n * @param\n * {number} code\n * @return\n * {string}\n ",
              "start": 1028,
              "end": 1128,
              "loc": {
                "start": {
                  "line": 40,
                  "column": 0
                },
                "end": {
                  "line": 49,
                  "column": 3
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n * Takes a number and returns the character it represents as a\n * single-character string. It serves as an alias to the native\n * function `String.fromCharCode`, except it only accepts one\n * argument, thus making it **incompatible** with characters\n * that take up 2 codes, for example, emojis.\n * @example\n * chr(230); //> æ\n * chr(65); //> A\n *\n * const joy = [\n *   108, 105, 116, 32,\n *   55357, 56834 // emoji\n * ];\n *\n * pipe(map(chr), unchars)(joy);\n * //> \"lit 😂\"\n * @see {@link ord}\n * @param {number} code - The code to convert to string\n * @return {string}     - The character it represents.\n ",
              "start": 1129,
              "end": 1750,
              "loc": {
                "start": {
                  "line": 50,
                  "column": 0
                },
                "end": {
                  "line": 71,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 24\n * @param\n * {string} char\n * @return\n * {number}\n ",
            "start": 0,
            "end": 100,
            "loc": {
              "start": {
                "line": 1,
                "column": 0
              },
              "end": {
                "line": 10,
                "column": 3
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n * Returns the character code of the first character in a string.\n * If the length of the string is 0, an error will be thrown\n * (this behaviour can potentially change in a future release).\n *\n * **Note**: There are some characters that take up 2 codes, thus\n * making the string have a length of 2. In this case, the function\n * will only return the first code.\n * @example\n * ord(\"A\"); //> 65\n * ord(\"10\"); // 49\n * ord(\"\");\n * //! Uncaught Error: [ord]: char\n * string must not be of length 0.\n *\n * pipe(chars, map(ord))(\"😈\");\n * //> [55357, 56840]\n * @see {@link chr}\n * @throws {Error}      - When the string is empty.\n * @param {string} char - The string that has the character.\n * @return {number}     - Character code as a number.\n ",
            "start": 101,
            "end": 859,
            "loc": {
              "start": {
                "line": 11,
                "column": 0
              },
              "end": {
                "line": 33,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 54\n * @param\n * {number} code\n * @return\n * {string}\n ",
            "start": 1028,
            "end": 1128,
            "loc": {
              "start": {
                "line": 40,
                "column": 0
              },
              "end": {
                "line": 49,
                "column": 3
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n * Takes a number and returns the character it represents as a\n * single-character string. It serves as an alias to the native\n * function `String.fromCharCode`, except it only accepts one\n * argument, thus making it **incompatible** with characters\n * that take up 2 codes, for example, emojis.\n * @example\n * chr(230); //> æ\n * chr(65); //> A\n *\n * const joy = [\n *   108, 105, 116, 32,\n *   55357, 56834 // emoji\n * ];\n *\n * pipe(map(chr), unchars)(joy);\n * //> \"lit 😂\"\n * @see {@link ord}\n * @param {number} code - The code to convert to string\n * @return {string}     - The character it represents.\n ",
            "start": 1129,
            "end": 1750,
            "loc": {
              "start": {
                "line": 50,
                "column": 0
              },
              "end": {
                "line": 71,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 1751,
        "end": 1818,
        "loc": {
          "start": {
            "line": 72,
            "column": 0
          },
          "end": {
            "line": 74,
            "column": 1
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 1758,
          "end": 1818,
          "loc": {
            "start": {
              "line": 72,
              "column": 7
            },
            "end": {
              "line": 74,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 1767,
            "end": 1770,
            "loc": {
              "start": {
                "line": 72,
                "column": 16
              },
              "end": {
                "line": 72,
                "column": 19
              },
              "identifierName": "chr"
            },
            "name": "chr",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "start": 1771,
              "end": 1775,
              "loc": {
                "start": {
                  "line": 72,
                  "column": 20
                },
                "end": {
                  "line": 72,
                  "column": 24
                },
                "identifierName": "code"
              },
              "name": "code"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "start": 1777,
            "end": 1818,
            "loc": {
              "start": {
                "line": 72,
                "column": 26
              },
              "end": {
                "line": 74,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 1783,
                "end": 1816,
                "loc": {
                  "start": {
                    "line": 73,
                    "column": 4
                  },
                  "end": {
                    "line": 73,
                    "column": 37
                  }
                },
                "argument": {
                  "type": "CallExpression",
                  "start": 1790,
                  "end": 1815,
                  "loc": {
                    "start": {
                      "line": 73,
                      "column": 11
                    },
                    "end": {
                      "line": 73,
                      "column": 36
                    }
                  },
                  "callee": {
                    "type": "MemberExpression",
                    "start": 1790,
                    "end": 1809,
                    "loc": {
                      "start": {
                        "line": 73,
                        "column": 11
                      },
                      "end": {
                        "line": 73,
                        "column": 30
                      }
                    },
                    "object": {
                      "type": "Identifier",
                      "start": 1790,
                      "end": 1796,
                      "loc": {
                        "start": {
                          "line": 73,
                          "column": 11
                        },
                        "end": {
                          "line": 73,
                          "column": 17
                        },
                        "identifierName": "String"
                      },
                      "name": "String"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 1797,
                      "end": 1809,
                      "loc": {
                        "start": {
                          "line": 73,
                          "column": 18
                        },
                        "end": {
                          "line": 73,
                          "column": 30
                        },
                        "identifierName": "fromCharCode"
                      },
                      "name": "fromCharCode"
                    },
                    "computed": false
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 1810,
                      "end": 1814,
                      "loc": {
                        "start": {
                          "line": 73,
                          "column": 31
                        },
                        "end": {
                          "line": 73,
                          "column": 35
                        },
                        "identifierName": "code"
                      },
                      "name": "code"
                    }
                  ]
                }
              }
            ],
            "directives": []
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 54\n * @param\n * {number} code\n * @return\n * {string}\n ",
              "start": 1028,
              "end": 1128,
              "loc": {
                "start": {
                  "line": 40,
                  "column": 0
                },
                "end": {
                  "line": 49,
                  "column": 3
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n * Takes a number and returns the character it represents as a\n * single-character string. It serves as an alias to the native\n * function `String.fromCharCode`, except it only accepts one\n * argument, thus making it **incompatible** with characters\n * that take up 2 codes, for example, emojis.\n * @example\n * chr(230); //> æ\n * chr(65); //> A\n *\n * const joy = [\n *   108, 105, 116, 32,\n *   55357, 56834 // emoji\n * ];\n *\n * pipe(map(chr), unchars)(joy);\n * //> \"lit 😂\"\n * @see {@link ord}\n * @param {number} code - The code to convert to string\n * @return {string}     - The character it represents.\n ",
              "start": 1129,
              "end": 1750,
              "loc": {
                "start": {
                  "line": 50,
                  "column": 0
                },
                "end": {
                  "line": 71,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 54\n * @param\n * {number} code\n * @return\n * {string}\n ",
            "start": 1028,
            "end": 1128,
            "loc": {
              "start": {
                "line": 40,
                "column": 0
              },
              "end": {
                "line": 49,
                "column": 3
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n * Takes a number and returns the character it represents as a\n * single-character string. It serves as an alias to the native\n * function `String.fromCharCode`, except it only accepts one\n * argument, thus making it **incompatible** with characters\n * that take up 2 codes, for example, emojis.\n * @example\n * chr(230); //> æ\n * chr(65); //> A\n *\n * const joy = [\n *   108, 105, 116, 32,\n *   55357, 56834 // emoji\n * ];\n *\n * pipe(map(chr), unchars)(joy);\n * //> \"lit 😂\"\n * @see {@link ord}\n * @param {number} code - The code to convert to string\n * @return {string}     - The character it represents.\n ",
            "start": 1129,
            "end": 1750,
            "loc": {
              "start": {
                "line": 50,
                "column": 0
              },
              "end": {
                "line": 71,
                "column": 3
              }
            }
          }
        ]
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 24\n * @param\n * {string} char\n * @return\n * {number}\n ",
      "start": 0,
      "end": 100,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 10,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n * Returns the character code of the first character in a string.\n * If the length of the string is 0, an error will be thrown\n * (this behaviour can potentially change in a future release).\n *\n * **Note**: There are some characters that take up 2 codes, thus\n * making the string have a length of 2. In this case, the function\n * will only return the first code.\n * @example\n * ord(\"A\"); //> 65\n * ord(\"10\"); // 49\n * ord(\"\");\n * //! Uncaught Error: [ord]: char\n * string must not be of length 0.\n *\n * pipe(chars, map(ord))(\"😈\");\n * //> [55357, 56840]\n * @see {@link chr}\n * @throws {Error}      - When the string is empty.\n * @param {string} char - The string that has the character.\n * @return {number}     - Character code as a number.\n ",
      "start": 101,
      "end": 859,
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 33,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 54\n * @param\n * {number} code\n * @return\n * {string}\n ",
      "start": 1028,
      "end": 1128,
      "loc": {
        "start": {
          "line": 40,
          "column": 0
        },
        "end": {
          "line": 49,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n * Takes a number and returns the character it represents as a\n * single-character string. It serves as an alias to the native\n * function `String.fromCharCode`, except it only accepts one\n * argument, thus making it **incompatible** with characters\n * that take up 2 codes, for example, emojis.\n * @example\n * chr(230); //> æ\n * chr(65); //> A\n *\n * const joy = [\n *   108, 105, 116, 32,\n *   55357, 56834 // emoji\n * ];\n *\n * pipe(map(chr), unchars)(joy);\n * //> \"lit 😂\"\n * @see {@link ord}\n * @param {number} code - The code to convert to string\n * @return {string}     - The character it represents.\n ",
      "start": 1129,
      "end": 1750,
      "loc": {
        "start": {
          "line": 50,
          "column": 0
        },
        "end": {
          "line": 71,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 24\n * @param\n * {string} char\n * @return\n * {number}\n ",
      "start": 0,
      "end": 100,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 10,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n * Returns the character code of the first character in a string.\n * If the length of the string is 0, an error will be thrown\n * (this behaviour can potentially change in a future release).\n *\n * **Note**: There are some characters that take up 2 codes, thus\n * making the string have a length of 2. In this case, the function\n * will only return the first code.\n * @example\n * ord(\"A\"); //> 65\n * ord(\"10\"); // 49\n * ord(\"\");\n * //! Uncaught Error: [ord]: char\n * string must not be of length 0.\n *\n * pipe(chars, map(ord))(\"😈\");\n * //> [55357, 56840]\n * @see {@link chr}\n * @throws {Error}      - When the string is empty.\n * @param {string} char - The string that has the character.\n * @return {number}     - Character code as a number.\n ",
      "start": 101,
      "end": 859,
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 33,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 860,
      "end": 866,
      "loc": {
        "start": {
          "line": 34,
          "column": 0
        },
        "end": {
          "line": 34,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 867,
      "end": 875,
      "loc": {
        "start": {
          "line": 34,
          "column": 7
        },
        "end": {
          "line": 34,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "ord",
      "start": 876,
      "end": 879,
      "loc": {
        "start": {
          "line": 34,
          "column": 16
        },
        "end": {
          "line": 34,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 879,
      "end": 880,
      "loc": {
        "start": {
          "line": 34,
          "column": 19
        },
        "end": {
          "line": 34,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "char",
      "start": 880,
      "end": 884,
      "loc": {
        "start": {
          "line": 34,
          "column": 20
        },
        "end": {
          "line": 34,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 884,
      "end": 885,
      "loc": {
        "start": {
          "line": 34,
          "column": 24
        },
        "end": {
          "line": 34,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 886,
      "end": 887,
      "loc": {
        "start": {
          "line": 34,
          "column": 26
        },
        "end": {
          "line": 34,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "if",
        "keyword": "if",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "if",
      "start": 892,
      "end": 894,
      "loc": {
        "start": {
          "line": 35,
          "column": 4
        },
        "end": {
          "line": 35,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 895,
      "end": 896,
      "loc": {
        "start": {
          "line": 35,
          "column": 7
        },
        "end": {
          "line": 35,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "char",
      "start": 896,
      "end": 900,
      "loc": {
        "start": {
          "line": 35,
          "column": 8
        },
        "end": {
          "line": 35,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 900,
      "end": 901,
      "loc": {
        "start": {
          "line": 35,
          "column": 12
        },
        "end": {
          "line": 35,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "length",
      "start": 901,
      "end": 907,
      "loc": {
        "start": {
          "line": 35,
          "column": 13
        },
        "end": {
          "line": 35,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "==/!=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": 6,
        "updateContext": null
      },
      "value": "===",
      "start": 908,
      "end": 911,
      "loc": {
        "start": {
          "line": 35,
          "column": 20
        },
        "end": {
          "line": 35,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "num",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": 0,
      "start": 912,
      "end": 913,
      "loc": {
        "start": {
          "line": 35,
          "column": 24
        },
        "end": {
          "line": 35,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 913,
      "end": 914,
      "loc": {
        "start": {
          "line": 35,
          "column": 25
        },
        "end": {
          "line": 35,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 915,
      "end": 916,
      "loc": {
        "start": {
          "line": 35,
          "column": 27
        },
        "end": {
          "line": 35,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": "throw",
        "keyword": "throw",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "throw",
      "start": 925,
      "end": 930,
      "loc": {
        "start": {
          "line": 36,
          "column": 8
        },
        "end": {
          "line": 36,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "new",
        "keyword": "new",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "new",
      "start": 931,
      "end": 934,
      "loc": {
        "start": {
          "line": 36,
          "column": 14
        },
        "end": {
          "line": 36,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Error",
      "start": 935,
      "end": 940,
      "loc": {
        "start": {
          "line": 36,
          "column": 18
        },
        "end": {
          "line": 36,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 940,
      "end": 941,
      "loc": {
        "start": {
          "line": 36,
          "column": 23
        },
        "end": {
          "line": 36,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "[ord]: char string must not be of length 0.",
      "start": 941,
      "end": 986,
      "loc": {
        "start": {
          "line": 36,
          "column": 24
        },
        "end": {
          "line": 36,
          "column": 69
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 986,
      "end": 987,
      "loc": {
        "start": {
          "line": 36,
          "column": 69
        },
        "end": {
          "line": 36,
          "column": 70
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 987,
      "end": 988,
      "loc": {
        "start": {
          "line": 36,
          "column": 70
        },
        "end": {
          "line": 36,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 993,
      "end": 994,
      "loc": {
        "start": {
          "line": 37,
          "column": 4
        },
        "end": {
          "line": 37,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 999,
      "end": 1005,
      "loc": {
        "start": {
          "line": 38,
          "column": 4
        },
        "end": {
          "line": 38,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "char",
      "start": 1006,
      "end": 1010,
      "loc": {
        "start": {
          "line": 38,
          "column": 11
        },
        "end": {
          "line": 38,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1010,
      "end": 1011,
      "loc": {
        "start": {
          "line": 38,
          "column": 15
        },
        "end": {
          "line": 38,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "charCodeAt",
      "start": 1011,
      "end": 1021,
      "loc": {
        "start": {
          "line": 38,
          "column": 16
        },
        "end": {
          "line": 38,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1021,
      "end": 1022,
      "loc": {
        "start": {
          "line": 38,
          "column": 26
        },
        "end": {
          "line": 38,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "num",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": 0,
      "start": 1022,
      "end": 1023,
      "loc": {
        "start": {
          "line": 38,
          "column": 27
        },
        "end": {
          "line": 38,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1023,
      "end": 1024,
      "loc": {
        "start": {
          "line": 38,
          "column": 28
        },
        "end": {
          "line": 38,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1024,
      "end": 1025,
      "loc": {
        "start": {
          "line": 38,
          "column": 29
        },
        "end": {
          "line": 38,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1026,
      "end": 1027,
      "loc": {
        "start": {
          "line": 39,
          "column": 0
        },
        "end": {
          "line": 39,
          "column": 1
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 54\n * @param\n * {number} code\n * @return\n * {string}\n ",
      "start": 1028,
      "end": 1128,
      "loc": {
        "start": {
          "line": 40,
          "column": 0
        },
        "end": {
          "line": 49,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n * Takes a number and returns the character it represents as a\n * single-character string. It serves as an alias to the native\n * function `String.fromCharCode`, except it only accepts one\n * argument, thus making it **incompatible** with characters\n * that take up 2 codes, for example, emojis.\n * @example\n * chr(230); //> æ\n * chr(65); //> A\n *\n * const joy = [\n *   108, 105, 116, 32,\n *   55357, 56834 // emoji\n * ];\n *\n * pipe(map(chr), unchars)(joy);\n * //> \"lit 😂\"\n * @see {@link ord}\n * @param {number} code - The code to convert to string\n * @return {string}     - The character it represents.\n ",
      "start": 1129,
      "end": 1750,
      "loc": {
        "start": {
          "line": 50,
          "column": 0
        },
        "end": {
          "line": 71,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 1751,
      "end": 1757,
      "loc": {
        "start": {
          "line": 72,
          "column": 0
        },
        "end": {
          "line": 72,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 1758,
      "end": 1766,
      "loc": {
        "start": {
          "line": 72,
          "column": 7
        },
        "end": {
          "line": 72,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "chr",
      "start": 1767,
      "end": 1770,
      "loc": {
        "start": {
          "line": 72,
          "column": 16
        },
        "end": {
          "line": 72,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1770,
      "end": 1771,
      "loc": {
        "start": {
          "line": 72,
          "column": 19
        },
        "end": {
          "line": 72,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "code",
      "start": 1771,
      "end": 1775,
      "loc": {
        "start": {
          "line": 72,
          "column": 20
        },
        "end": {
          "line": 72,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1775,
      "end": 1776,
      "loc": {
        "start": {
          "line": 72,
          "column": 24
        },
        "end": {
          "line": 72,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1777,
      "end": 1778,
      "loc": {
        "start": {
          "line": 72,
          "column": 26
        },
        "end": {
          "line": 72,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 1783,
      "end": 1789,
      "loc": {
        "start": {
          "line": 73,
          "column": 4
        },
        "end": {
          "line": 73,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "String",
      "start": 1790,
      "end": 1796,
      "loc": {
        "start": {
          "line": 73,
          "column": 11
        },
        "end": {
          "line": 73,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1796,
      "end": 1797,
      "loc": {
        "start": {
          "line": 73,
          "column": 17
        },
        "end": {
          "line": 73,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fromCharCode",
      "start": 1797,
      "end": 1809,
      "loc": {
        "start": {
          "line": 73,
          "column": 18
        },
        "end": {
          "line": 73,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1809,
      "end": 1810,
      "loc": {
        "start": {
          "line": 73,
          "column": 30
        },
        "end": {
          "line": 73,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "code",
      "start": 1810,
      "end": 1814,
      "loc": {
        "start": {
          "line": 73,
          "column": 31
        },
        "end": {
          "line": 73,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1814,
      "end": 1815,
      "loc": {
        "start": {
          "line": 73,
          "column": 35
        },
        "end": {
          "line": 73,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1815,
      "end": 1816,
      "loc": {
        "start": {
          "line": 73,
          "column": 36
        },
        "end": {
          "line": 73,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1817,
      "end": 1818,
      "loc": {
        "start": {
          "line": 74,
          "column": 0
        },
        "end": {
          "line": 74,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1819,
      "end": 1819,
      "loc": {
        "start": {
          "line": 75,
          "column": 0
        },
        "end": {
          "line": 75,
          "column": 0
        }
      }
    }
  ]
}