{
  "type": "File",
  "start": 0,
  "end": 1291,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 42,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 1291,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 42,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 0,
        "end": 26,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 26
          }
        },
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 9,
            "end": 12,
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 12
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 9,
              "end": 12,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 9
                },
                "end": {
                  "line": 1,
                  "column": 12
                },
                "identifierName": "map"
              },
              "name": "map"
            },
            "local": {
              "type": "Identifier",
              "start": 9,
              "end": 12,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 9
                },
                "end": {
                  "line": 1,
                  "column": 12
                },
                "identifierName": "map"
              },
              "name": "map"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 20,
          "end": 25,
          "loc": {
            "start": {
              "line": 1,
              "column": 20
            },
            "end": {
              "line": 1,
              "column": 25
            }
          },
          "extra": {
            "rawValue": "../",
            "raw": "\"../\""
          },
          "value": "../"
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 35\n * @param\n * {Array} funcs\n ",
            "start": 27,
            "end": 104,
            "loc": {
              "start": {
                "line": 2,
                "column": 0
              },
              "end": {
                "line": 9,
                "column": 3
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n * Receives an **array of functions** and returns a function that\n * is the juxtaposition of those functions. The returned function\n * takes separate arguments and applies them to each function, thus\n * returning an array that contains the results.\n *\n * The current typed overloads only provide partial type\n * checking for **1 to 5 functions**. If you use lambdas\n * instead of named functions, you must specify the same\n * arguments and its types as the ones you passed to\n * the function that receives and applies them.\n *\n * **Note**: The first function in the list needs the exact\n * parameter types as the arguments in the inner function.\n * @example\n * const bounds = juxt([Math.min, Math.max]);\n *\n * bounds(...range(10, -10)); //> [-10, 10]\n * juxt([inc, dec, square])(5); //> [6, 4, 25]\n * juxt([reverse, length])(\"Clojure\");\n * //> [\"erujolC\", 7]\n * juxt([add, neg])(9, 6); //> [15, -9]\n * @param {function[]} funcs - The list of functions.\n * @return {function}\n * A function that applies its arguments to each function in the list.\n ",
            "start": 105,
            "end": 1167,
            "loc": {
              "start": {
                "line": 10,
                "column": 0
              },
              "end": {
                "line": 36,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 1168,
        "end": 1290,
        "loc": {
          "start": {
            "line": 37,
            "column": 0
          },
          "end": {
            "line": 41,
            "column": 1
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 1175,
          "end": 1290,
          "loc": {
            "start": {
              "line": 37,
              "column": 7
            },
            "end": {
              "line": 41,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 1184,
            "end": 1188,
            "loc": {
              "start": {
                "line": 37,
                "column": 16
              },
              "end": {
                "line": 37,
                "column": 20
              },
              "identifierName": "juxt"
            },
            "name": "juxt",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "start": 1189,
              "end": 1194,
              "loc": {
                "start": {
                  "line": 37,
                  "column": 21
                },
                "end": {
                  "line": 37,
                  "column": 26
                },
                "identifierName": "funcs"
              },
              "name": "funcs"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "start": 1196,
            "end": 1290,
            "loc": {
              "start": {
                "line": 37,
                "column": 28
              },
              "end": {
                "line": 41,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 1202,
                "end": 1288,
                "loc": {
                  "start": {
                    "line": 38,
                    "column": 4
                  },
                  "end": {
                    "line": 40,
                    "column": 6
                  }
                },
                "argument": {
                  "type": "FunctionExpression",
                  "start": 1209,
                  "end": 1287,
                  "loc": {
                    "start": {
                      "line": 38,
                      "column": 11
                    },
                    "end": {
                      "line": 40,
                      "column": 5
                    }
                  },
                  "id": {
                    "type": "Identifier",
                    "start": 1218,
                    "end": 1224,
                    "loc": {
                      "start": {
                        "line": 38,
                        "column": 20
                      },
                      "end": {
                        "line": 38,
                        "column": 26
                      },
                      "identifierName": "juxt__"
                    },
                    "name": "juxt__"
                  },
                  "generator": false,
                  "expression": false,
                  "async": false,
                  "params": [
                    {
                      "type": "RestElement",
                      "start": 1225,
                      "end": 1232,
                      "loc": {
                        "start": {
                          "line": 38,
                          "column": 27
                        },
                        "end": {
                          "line": 38,
                          "column": 34
                        }
                      },
                      "argument": {
                        "type": "Identifier",
                        "start": 1228,
                        "end": 1232,
                        "loc": {
                          "start": {
                            "line": 38,
                            "column": 30
                          },
                          "end": {
                            "line": 38,
                            "column": 34
                          },
                          "identifierName": "args"
                        },
                        "name": "args"
                      }
                    }
                  ],
                  "body": {
                    "type": "BlockStatement",
                    "start": 1234,
                    "end": 1287,
                    "loc": {
                      "start": {
                        "line": 38,
                        "column": 36
                      },
                      "end": {
                        "line": 40,
                        "column": 5
                      }
                    },
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 1244,
                        "end": 1281,
                        "loc": {
                          "start": {
                            "line": 39,
                            "column": 8
                          },
                          "end": {
                            "line": 39,
                            "column": 45
                          }
                        },
                        "argument": {
                          "type": "CallExpression",
                          "start": 1251,
                          "end": 1280,
                          "loc": {
                            "start": {
                              "line": 39,
                              "column": 15
                            },
                            "end": {
                              "line": 39,
                              "column": 44
                            }
                          },
                          "callee": {
                            "type": "CallExpression",
                            "start": 1251,
                            "end": 1273,
                            "loc": {
                              "start": {
                                "line": 39,
                                "column": 15
                              },
                              "end": {
                                "line": 39,
                                "column": 37
                              }
                            },
                            "callee": {
                              "type": "Identifier",
                              "start": 1251,
                              "end": 1254,
                              "loc": {
                                "start": {
                                  "line": 39,
                                  "column": 15
                                },
                                "end": {
                                  "line": 39,
                                  "column": 18
                                },
                                "identifierName": "map"
                              },
                              "name": "map"
                            },
                            "arguments": [
                              {
                                "type": "ArrowFunctionExpression",
                                "start": 1255,
                                "end": 1272,
                                "loc": {
                                  "start": {
                                    "line": 39,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 39,
                                    "column": 36
                                  }
                                },
                                "id": null,
                                "generator": false,
                                "expression": true,
                                "async": false,
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "start": 1256,
                                    "end": 1257,
                                    "loc": {
                                      "start": {
                                        "line": 39,
                                        "column": 20
                                      },
                                      "end": {
                                        "line": 39,
                                        "column": 21
                                      },
                                      "identifierName": "f"
                                    },
                                    "name": "f"
                                  }
                                ],
                                "body": {
                                  "type": "CallExpression",
                                  "start": 1262,
                                  "end": 1272,
                                  "loc": {
                                    "start": {
                                      "line": 39,
                                      "column": 26
                                    },
                                    "end": {
                                      "line": 39,
                                      "column": 36
                                    }
                                  },
                                  "callee": {
                                    "type": "Identifier",
                                    "start": 1262,
                                    "end": 1263,
                                    "loc": {
                                      "start": {
                                        "line": 39,
                                        "column": 26
                                      },
                                      "end": {
                                        "line": 39,
                                        "column": 27
                                      },
                                      "identifierName": "f"
                                    },
                                    "name": "f"
                                  },
                                  "arguments": [
                                    {
                                      "type": "SpreadElement",
                                      "start": 1264,
                                      "end": 1271,
                                      "loc": {
                                        "start": {
                                          "line": 39,
                                          "column": 28
                                        },
                                        "end": {
                                          "line": 39,
                                          "column": 35
                                        }
                                      },
                                      "argument": {
                                        "type": "Identifier",
                                        "start": 1267,
                                        "end": 1271,
                                        "loc": {
                                          "start": {
                                            "line": 39,
                                            "column": 31
                                          },
                                          "end": {
                                            "line": 39,
                                            "column": 35
                                          },
                                          "identifierName": "args"
                                        },
                                        "name": "args"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "start": 1274,
                              "end": 1279,
                              "loc": {
                                "start": {
                                  "line": 39,
                                  "column": 38
                                },
                                "end": {
                                  "line": 39,
                                  "column": 43
                                },
                                "identifierName": "funcs"
                              },
                              "name": "funcs"
                            }
                          ]
                        }
                      }
                    ],
                    "directives": []
                  }
                }
              }
            ],
            "directives": []
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 35\n * @param\n * {Array} funcs\n ",
              "start": 27,
              "end": 104,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 0
                },
                "end": {
                  "line": 9,
                  "column": 3
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n * Receives an **array of functions** and returns a function that\n * is the juxtaposition of those functions. The returned function\n * takes separate arguments and applies them to each function, thus\n * returning an array that contains the results.\n *\n * The current typed overloads only provide partial type\n * checking for **1 to 5 functions**. If you use lambdas\n * instead of named functions, you must specify the same\n * arguments and its types as the ones you passed to\n * the function that receives and applies them.\n *\n * **Note**: The first function in the list needs the exact\n * parameter types as the arguments in the inner function.\n * @example\n * const bounds = juxt([Math.min, Math.max]);\n *\n * bounds(...range(10, -10)); //> [-10, 10]\n * juxt([inc, dec, square])(5); //> [6, 4, 25]\n * juxt([reverse, length])(\"Clojure\");\n * //> [\"erujolC\", 7]\n * juxt([add, neg])(9, 6); //> [15, -9]\n * @param {function[]} funcs - The list of functions.\n * @return {function}\n * A function that applies its arguments to each function in the list.\n ",
              "start": 105,
              "end": 1167,
              "loc": {
                "start": {
                  "line": 10,
                  "column": 0
                },
                "end": {
                  "line": 36,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 35\n * @param\n * {Array} funcs\n ",
            "start": 27,
            "end": 104,
            "loc": {
              "start": {
                "line": 2,
                "column": 0
              },
              "end": {
                "line": 9,
                "column": 3
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n * Receives an **array of functions** and returns a function that\n * is the juxtaposition of those functions. The returned function\n * takes separate arguments and applies them to each function, thus\n * returning an array that contains the results.\n *\n * The current typed overloads only provide partial type\n * checking for **1 to 5 functions**. If you use lambdas\n * instead of named functions, you must specify the same\n * arguments and its types as the ones you passed to\n * the function that receives and applies them.\n *\n * **Note**: The first function in the list needs the exact\n * parameter types as the arguments in the inner function.\n * @example\n * const bounds = juxt([Math.min, Math.max]);\n *\n * bounds(...range(10, -10)); //> [-10, 10]\n * juxt([inc, dec, square])(5); //> [6, 4, 25]\n * juxt([reverse, length])(\"Clojure\");\n * //> [\"erujolC\", 7]\n * juxt([add, neg])(9, 6); //> [15, -9]\n * @param {function[]} funcs - The list of functions.\n * @return {function}\n * A function that applies its arguments to each function in the list.\n ",
            "start": 105,
            "end": 1167,
            "loc": {
              "start": {
                "line": 10,
                "column": 0
              },
              "end": {
                "line": 36,
                "column": 3
              }
            }
          }
        ]
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 35\n * @param\n * {Array} funcs\n ",
      "start": 27,
      "end": 104,
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 9,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n * Receives an **array of functions** and returns a function that\n * is the juxtaposition of those functions. The returned function\n * takes separate arguments and applies them to each function, thus\n * returning an array that contains the results.\n *\n * The current typed overloads only provide partial type\n * checking for **1 to 5 functions**. If you use lambdas\n * instead of named functions, you must specify the same\n * arguments and its types as the ones you passed to\n * the function that receives and applies them.\n *\n * **Note**: The first function in the list needs the exact\n * parameter types as the arguments in the inner function.\n * @example\n * const bounds = juxt([Math.min, Math.max]);\n *\n * bounds(...range(10, -10)); //> [-10, 10]\n * juxt([inc, dec, square])(5); //> [6, 4, 25]\n * juxt([reverse, length])(\"Clojure\");\n * //> [\"erujolC\", 7]\n * juxt([add, neg])(9, 6); //> [15, -9]\n * @param {function[]} funcs - The list of functions.\n * @return {function}\n * A function that applies its arguments to each function in the list.\n ",
      "start": 105,
      "end": 1167,
      "loc": {
        "start": {
          "line": 10,
          "column": 0
        },
        "end": {
          "line": 36,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 0,
      "end": 6,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 7,
      "end": 8,
      "loc": {
        "start": {
          "line": 1,
          "column": 7
        },
        "end": {
          "line": 1,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "map",
      "start": 9,
      "end": 12,
      "loc": {
        "start": {
          "line": 1,
          "column": 9
        },
        "end": {
          "line": 1,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 13,
      "end": 14,
      "loc": {
        "start": {
          "line": 1,
          "column": 13
        },
        "end": {
          "line": 1,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 15,
      "end": 19,
      "loc": {
        "start": {
          "line": 1,
          "column": 15
        },
        "end": {
          "line": 1,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "../",
      "start": 20,
      "end": 25,
      "loc": {
        "start": {
          "line": 1,
          "column": 20
        },
        "end": {
          "line": 1,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 25,
      "end": 26,
      "loc": {
        "start": {
          "line": 1,
          "column": 25
        },
        "end": {
          "line": 1,
          "column": 26
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 35\n * @param\n * {Array} funcs\n ",
      "start": 27,
      "end": 104,
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 9,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n * Receives an **array of functions** and returns a function that\n * is the juxtaposition of those functions. The returned function\n * takes separate arguments and applies them to each function, thus\n * returning an array that contains the results.\n *\n * The current typed overloads only provide partial type\n * checking for **1 to 5 functions**. If you use lambdas\n * instead of named functions, you must specify the same\n * arguments and its types as the ones you passed to\n * the function that receives and applies them.\n *\n * **Note**: The first function in the list needs the exact\n * parameter types as the arguments in the inner function.\n * @example\n * const bounds = juxt([Math.min, Math.max]);\n *\n * bounds(...range(10, -10)); //> [-10, 10]\n * juxt([inc, dec, square])(5); //> [6, 4, 25]\n * juxt([reverse, length])(\"Clojure\");\n * //> [\"erujolC\", 7]\n * juxt([add, neg])(9, 6); //> [15, -9]\n * @param {function[]} funcs - The list of functions.\n * @return {function}\n * A function that applies its arguments to each function in the list.\n ",
      "start": 105,
      "end": 1167,
      "loc": {
        "start": {
          "line": 10,
          "column": 0
        },
        "end": {
          "line": 36,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 1168,
      "end": 1174,
      "loc": {
        "start": {
          "line": 37,
          "column": 0
        },
        "end": {
          "line": 37,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 1175,
      "end": 1183,
      "loc": {
        "start": {
          "line": 37,
          "column": 7
        },
        "end": {
          "line": 37,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "juxt",
      "start": 1184,
      "end": 1188,
      "loc": {
        "start": {
          "line": 37,
          "column": 16
        },
        "end": {
          "line": 37,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1188,
      "end": 1189,
      "loc": {
        "start": {
          "line": 37,
          "column": 20
        },
        "end": {
          "line": 37,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "funcs",
      "start": 1189,
      "end": 1194,
      "loc": {
        "start": {
          "line": 37,
          "column": 21
        },
        "end": {
          "line": 37,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1194,
      "end": 1195,
      "loc": {
        "start": {
          "line": 37,
          "column": 26
        },
        "end": {
          "line": 37,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1196,
      "end": 1197,
      "loc": {
        "start": {
          "line": 37,
          "column": 28
        },
        "end": {
          "line": 37,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 1202,
      "end": 1208,
      "loc": {
        "start": {
          "line": 38,
          "column": 4
        },
        "end": {
          "line": 38,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 1209,
      "end": 1217,
      "loc": {
        "start": {
          "line": 38,
          "column": 11
        },
        "end": {
          "line": 38,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "juxt__",
      "start": 1218,
      "end": 1224,
      "loc": {
        "start": {
          "line": 38,
          "column": 20
        },
        "end": {
          "line": 38,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1224,
      "end": 1225,
      "loc": {
        "start": {
          "line": 38,
          "column": 26
        },
        "end": {
          "line": 38,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "...",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1225,
      "end": 1228,
      "loc": {
        "start": {
          "line": 38,
          "column": 27
        },
        "end": {
          "line": 38,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "args",
      "start": 1228,
      "end": 1232,
      "loc": {
        "start": {
          "line": 38,
          "column": 30
        },
        "end": {
          "line": 38,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1232,
      "end": 1233,
      "loc": {
        "start": {
          "line": 38,
          "column": 34
        },
        "end": {
          "line": 38,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1234,
      "end": 1235,
      "loc": {
        "start": {
          "line": 38,
          "column": 36
        },
        "end": {
          "line": 38,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 1244,
      "end": 1250,
      "loc": {
        "start": {
          "line": 39,
          "column": 8
        },
        "end": {
          "line": 39,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "map",
      "start": 1251,
      "end": 1254,
      "loc": {
        "start": {
          "line": 39,
          "column": 15
        },
        "end": {
          "line": 39,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1254,
      "end": 1255,
      "loc": {
        "start": {
          "line": 39,
          "column": 18
        },
        "end": {
          "line": 39,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1255,
      "end": 1256,
      "loc": {
        "start": {
          "line": 39,
          "column": 19
        },
        "end": {
          "line": 39,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "f",
      "start": 1256,
      "end": 1257,
      "loc": {
        "start": {
          "line": 39,
          "column": 20
        },
        "end": {
          "line": 39,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1257,
      "end": 1258,
      "loc": {
        "start": {
          "line": 39,
          "column": 21
        },
        "end": {
          "line": 39,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "=>",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1259,
      "end": 1261,
      "loc": {
        "start": {
          "line": 39,
          "column": 23
        },
        "end": {
          "line": 39,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "f",
      "start": 1262,
      "end": 1263,
      "loc": {
        "start": {
          "line": 39,
          "column": 26
        },
        "end": {
          "line": 39,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1263,
      "end": 1264,
      "loc": {
        "start": {
          "line": 39,
          "column": 27
        },
        "end": {
          "line": 39,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": "...",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1264,
      "end": 1267,
      "loc": {
        "start": {
          "line": 39,
          "column": 28
        },
        "end": {
          "line": 39,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "args",
      "start": 1267,
      "end": 1271,
      "loc": {
        "start": {
          "line": 39,
          "column": 31
        },
        "end": {
          "line": 39,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1271,
      "end": 1272,
      "loc": {
        "start": {
          "line": 39,
          "column": 35
        },
        "end": {
          "line": 39,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1272,
      "end": 1273,
      "loc": {
        "start": {
          "line": 39,
          "column": 36
        },
        "end": {
          "line": 39,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1273,
      "end": 1274,
      "loc": {
        "start": {
          "line": 39,
          "column": 37
        },
        "end": {
          "line": 39,
          "column": 38
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "funcs",
      "start": 1274,
      "end": 1279,
      "loc": {
        "start": {
          "line": 39,
          "column": 38
        },
        "end": {
          "line": 39,
          "column": 43
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1279,
      "end": 1280,
      "loc": {
        "start": {
          "line": 39,
          "column": 43
        },
        "end": {
          "line": 39,
          "column": 44
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1280,
      "end": 1281,
      "loc": {
        "start": {
          "line": 39,
          "column": 44
        },
        "end": {
          "line": 39,
          "column": 45
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1286,
      "end": 1287,
      "loc": {
        "start": {
          "line": 40,
          "column": 4
        },
        "end": {
          "line": 40,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1287,
      "end": 1288,
      "loc": {
        "start": {
          "line": 40,
          "column": 5
        },
        "end": {
          "line": 40,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1289,
      "end": 1290,
      "loc": {
        "start": {
          "line": 41,
          "column": 0
        },
        "end": {
          "line": 41,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1291,
      "end": 1291,
      "loc": {
        "start": {
          "line": 42,
          "column": 0
        },
        "end": {
          "line": 42,
          "column": 0
        }
      }
    }
  ]
}