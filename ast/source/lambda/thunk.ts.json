{
  "type": "File",
  "start": 0,
  "end": 1648,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 62,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 1648,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 62,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ExportNamedDeclaration",
        "start": 857,
        "end": 966,
        "loc": {
          "start": {
            "line": 30,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 1
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 864,
          "end": 966,
          "loc": {
            "start": {
              "line": 30,
              "column": 7
            },
            "end": {
              "line": 34,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 873,
            "end": 879,
            "loc": {
              "start": {
                "line": 30,
                "column": 16
              },
              "end": {
                "line": 30,
                "column": 22
              },
              "identifierName": "thunkF"
            },
            "name": "thunkF",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "start": 880,
              "end": 881,
              "loc": {
                "start": {
                  "line": 30,
                  "column": 23
                },
                "end": {
                  "line": 30,
                  "column": 24
                },
                "identifierName": "f"
              },
              "name": "f"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "start": 883,
            "end": 966,
            "loc": {
              "start": {
                "line": 30,
                "column": 26
              },
              "end": {
                "line": 34,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 889,
                "end": 964,
                "loc": {
                  "start": {
                    "line": 31,
                    "column": 4
                  },
                  "end": {
                    "line": 33,
                    "column": 6
                  }
                },
                "argument": {
                  "type": "FunctionExpression",
                  "start": 896,
                  "end": 963,
                  "loc": {
                    "start": {
                      "line": 31,
                      "column": 11
                    },
                    "end": {
                      "line": 33,
                      "column": 5
                    }
                  },
                  "id": {
                    "type": "Identifier",
                    "start": 905,
                    "end": 913,
                    "loc": {
                      "start": {
                        "line": 31,
                        "column": 20
                      },
                      "end": {
                        "line": 31,
                        "column": 28
                      },
                      "identifierName": "thunkF__"
                    },
                    "name": "thunkF__"
                  },
                  "generator": false,
                  "expression": false,
                  "async": false,
                  "params": [
                    {
                      "type": "RestElement",
                      "start": 914,
                      "end": 921,
                      "loc": {
                        "start": {
                          "line": 31,
                          "column": 29
                        },
                        "end": {
                          "line": 31,
                          "column": 36
                        }
                      },
                      "argument": {
                        "type": "Identifier",
                        "start": 917,
                        "end": 921,
                        "loc": {
                          "start": {
                            "line": 31,
                            "column": 32
                          },
                          "end": {
                            "line": 31,
                            "column": 36
                          },
                          "identifierName": "args"
                        },
                        "name": "args"
                      }
                    }
                  ],
                  "body": {
                    "type": "BlockStatement",
                    "start": 923,
                    "end": 963,
                    "loc": {
                      "start": {
                        "line": 31,
                        "column": 38
                      },
                      "end": {
                        "line": 33,
                        "column": 5
                      }
                    },
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 933,
                        "end": 957,
                        "loc": {
                          "start": {
                            "line": 32,
                            "column": 8
                          },
                          "end": {
                            "line": 32,
                            "column": 32
                          }
                        },
                        "argument": {
                          "type": "ArrowFunctionExpression",
                          "start": 940,
                          "end": 956,
                          "loc": {
                            "start": {
                              "line": 32,
                              "column": 15
                            },
                            "end": {
                              "line": 32,
                              "column": 31
                            }
                          },
                          "id": null,
                          "generator": false,
                          "expression": true,
                          "async": false,
                          "params": [],
                          "body": {
                            "type": "CallExpression",
                            "start": 946,
                            "end": 956,
                            "loc": {
                              "start": {
                                "line": 32,
                                "column": 21
                              },
                              "end": {
                                "line": 32,
                                "column": 31
                              }
                            },
                            "callee": {
                              "type": "Identifier",
                              "start": 946,
                              "end": 947,
                              "loc": {
                                "start": {
                                  "line": 32,
                                  "column": 21
                                },
                                "end": {
                                  "line": 32,
                                  "column": 22
                                },
                                "identifierName": "f"
                              },
                              "name": "f"
                            },
                            "arguments": [
                              {
                                "type": "SpreadElement",
                                "start": 948,
                                "end": 955,
                                "loc": {
                                  "start": {
                                    "line": 32,
                                    "column": 23
                                  },
                                  "end": {
                                    "line": 32,
                                    "column": 30
                                  }
                                },
                                "argument": {
                                  "type": "Identifier",
                                  "start": 951,
                                  "end": 955,
                                  "loc": {
                                    "start": {
                                      "line": 32,
                                      "column": 26
                                    },
                                    "end": {
                                      "line": 32,
                                      "column": 30
                                    },
                                    "identifierName": "args"
                                  },
                                  "name": "args"
                                }
                              }
                            ]
                          }
                        }
                      }
                    ],
                    "directives": []
                  }
                }
              }
            ],
            "directives": [],
            "trailingComments": null
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 22\n * @param\n * {undefined} f\n ",
              "start": 0,
              "end": 77,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 0
                },
                "end": {
                  "line": 8,
                  "column": 3
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n * Curried function that first takes a function, then returns another\n * function that accepts `f`'s arguments and lastly, returns a\n * function that takes no arguments and returns the application\n * of the provided arguments to `f`. This is useful for lazy\n * evaluation and delaying the execution of the function.\n * @example\n * describe(\"myFunc\", () => {\n *   it(\"should throw error\", () => {\n *     expect(thunkF(myFunc)(\"bad argument\"))\n *       .toThrowError(BadArgError);\n *   });\n * }); //! [PASS]\n *\n * thunkF(inc)(1)(); //> 2\n * @see {@link thunkV}\n * @param {function(args: ...any): any} f - A function to be called later.\n * @return {function(args: ...any): function(): any}\n * A function that takes no arguments and returns the result of calling f.\n ",
              "start": 78,
              "end": 856,
              "loc": {
                "start": {
                  "line": 9,
                  "column": 0
                },
                "end": {
                  "line": 29,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 44\n * @param\n * {T} val\n ",
              "start": 967,
              "end": 1038,
              "loc": {
                "start": {
                  "line": 35,
                  "column": 0
                },
                "end": {
                  "line": 42,
                  "column": 3
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n * Takes any value or reference and returns a callable function\n * that takes no arguments and returns that very same value.\n * In functional programming this is called a **thunk**,\n * and it's very useful for lazy evaluation.\n * @example\n * const song = thunkV(\"Call me maybe...\");\n *\n * song(); //> \"Call me maybe...\"\n * thunkV(true)(); //> true\n * @see {@link thunkF}\n * @see https://en.wikipedia.org/wiki/Thunk\n * @param {any} val          - The value to return later.\n * @return {function(): any} - The thunk that returns the value.\n ",
              "start": 1039,
              "end": 1593,
              "loc": {
                "start": {
                  "line": 43,
                  "column": 0
                },
                "end": {
                  "line": 58,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 22\n * @param\n * {undefined} f\n ",
            "start": 0,
            "end": 77,
            "loc": {
              "start": {
                "line": 1,
                "column": 0
              },
              "end": {
                "line": 8,
                "column": 3
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n * Curried function that first takes a function, then returns another\n * function that accepts `f`'s arguments and lastly, returns a\n * function that takes no arguments and returns the application\n * of the provided arguments to `f`. This is useful for lazy\n * evaluation and delaying the execution of the function.\n * @example\n * describe(\"myFunc\", () => {\n *   it(\"should throw error\", () => {\n *     expect(thunkF(myFunc)(\"bad argument\"))\n *       .toThrowError(BadArgError);\n *   });\n * }); //! [PASS]\n *\n * thunkF(inc)(1)(); //> 2\n * @see {@link thunkV}\n * @param {function(args: ...any): any} f - A function to be called later.\n * @return {function(args: ...any): function(): any}\n * A function that takes no arguments and returns the result of calling f.\n ",
            "start": 78,
            "end": 856,
            "loc": {
              "start": {
                "line": 9,
                "column": 0
              },
              "end": {
                "line": 29,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 44\n * @param\n * {T} val\n ",
            "start": 967,
            "end": 1038,
            "loc": {
              "start": {
                "line": 35,
                "column": 0
              },
              "end": {
                "line": 42,
                "column": 3
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n * Takes any value or reference and returns a callable function\n * that takes no arguments and returns that very same value.\n * In functional programming this is called a **thunk**,\n * and it's very useful for lazy evaluation.\n * @example\n * const song = thunkV(\"Call me maybe...\");\n *\n * song(); //> \"Call me maybe...\"\n * thunkV(true)(); //> true\n * @see {@link thunkF}\n * @see https://en.wikipedia.org/wiki/Thunk\n * @param {any} val          - The value to return later.\n * @return {function(): any} - The thunk that returns the value.\n ",
            "start": 1039,
            "end": 1593,
            "loc": {
              "start": {
                "line": 43,
                "column": 0
              },
              "end": {
                "line": 58,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 1594,
        "end": 1647,
        "loc": {
          "start": {
            "line": 59,
            "column": 0
          },
          "end": {
            "line": 61,
            "column": 1
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 1601,
          "end": 1647,
          "loc": {
            "start": {
              "line": 59,
              "column": 7
            },
            "end": {
              "line": 61,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 1610,
            "end": 1616,
            "loc": {
              "start": {
                "line": 59,
                "column": 16
              },
              "end": {
                "line": 59,
                "column": 22
              },
              "identifierName": "thunkV"
            },
            "name": "thunkV",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "start": 1617,
              "end": 1620,
              "loc": {
                "start": {
                  "line": 59,
                  "column": 23
                },
                "end": {
                  "line": 59,
                  "column": 26
                },
                "identifierName": "val"
              },
              "name": "val"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "start": 1622,
            "end": 1647,
            "loc": {
              "start": {
                "line": 59,
                "column": 28
              },
              "end": {
                "line": 61,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 1628,
                "end": 1645,
                "loc": {
                  "start": {
                    "line": 60,
                    "column": 4
                  },
                  "end": {
                    "line": 60,
                    "column": 21
                  }
                },
                "argument": {
                  "type": "ArrowFunctionExpression",
                  "start": 1635,
                  "end": 1644,
                  "loc": {
                    "start": {
                      "line": 60,
                      "column": 11
                    },
                    "end": {
                      "line": 60,
                      "column": 20
                    }
                  },
                  "id": null,
                  "generator": false,
                  "expression": true,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "Identifier",
                    "start": 1641,
                    "end": 1644,
                    "loc": {
                      "start": {
                        "line": 60,
                        "column": 17
                      },
                      "end": {
                        "line": 60,
                        "column": 20
                      },
                      "identifierName": "val"
                    },
                    "name": "val"
                  }
                }
              }
            ],
            "directives": []
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 44\n * @param\n * {T} val\n ",
              "start": 967,
              "end": 1038,
              "loc": {
                "start": {
                  "line": 35,
                  "column": 0
                },
                "end": {
                  "line": 42,
                  "column": 3
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n * Takes any value or reference and returns a callable function\n * that takes no arguments and returns that very same value.\n * In functional programming this is called a **thunk**,\n * and it's very useful for lazy evaluation.\n * @example\n * const song = thunkV(\"Call me maybe...\");\n *\n * song(); //> \"Call me maybe...\"\n * thunkV(true)(); //> true\n * @see {@link thunkF}\n * @see https://en.wikipedia.org/wiki/Thunk\n * @param {any} val          - The value to return later.\n * @return {function(): any} - The thunk that returns the value.\n ",
              "start": 1039,
              "end": 1593,
              "loc": {
                "start": {
                  "line": 43,
                  "column": 0
                },
                "end": {
                  "line": 58,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 44\n * @param\n * {T} val\n ",
            "start": 967,
            "end": 1038,
            "loc": {
              "start": {
                "line": 35,
                "column": 0
              },
              "end": {
                "line": 42,
                "column": 3
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n * Takes any value or reference and returns a callable function\n * that takes no arguments and returns that very same value.\n * In functional programming this is called a **thunk**,\n * and it's very useful for lazy evaluation.\n * @example\n * const song = thunkV(\"Call me maybe...\");\n *\n * song(); //> \"Call me maybe...\"\n * thunkV(true)(); //> true\n * @see {@link thunkF}\n * @see https://en.wikipedia.org/wiki/Thunk\n * @param {any} val          - The value to return later.\n * @return {function(): any} - The thunk that returns the value.\n ",
            "start": 1039,
            "end": 1593,
            "loc": {
              "start": {
                "line": 43,
                "column": 0
              },
              "end": {
                "line": 58,
                "column": 3
              }
            }
          }
        ]
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 22\n * @param\n * {undefined} f\n ",
      "start": 0,
      "end": 77,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 8,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n * Curried function that first takes a function, then returns another\n * function that accepts `f`'s arguments and lastly, returns a\n * function that takes no arguments and returns the application\n * of the provided arguments to `f`. This is useful for lazy\n * evaluation and delaying the execution of the function.\n * @example\n * describe(\"myFunc\", () => {\n *   it(\"should throw error\", () => {\n *     expect(thunkF(myFunc)(\"bad argument\"))\n *       .toThrowError(BadArgError);\n *   });\n * }); //! [PASS]\n *\n * thunkF(inc)(1)(); //> 2\n * @see {@link thunkV}\n * @param {function(args: ...any): any} f - A function to be called later.\n * @return {function(args: ...any): function(): any}\n * A function that takes no arguments and returns the result of calling f.\n ",
      "start": 78,
      "end": 856,
      "loc": {
        "start": {
          "line": 9,
          "column": 0
        },
        "end": {
          "line": 29,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 44\n * @param\n * {T} val\n ",
      "start": 967,
      "end": 1038,
      "loc": {
        "start": {
          "line": 35,
          "column": 0
        },
        "end": {
          "line": 42,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n * Takes any value or reference and returns a callable function\n * that takes no arguments and returns that very same value.\n * In functional programming this is called a **thunk**,\n * and it's very useful for lazy evaluation.\n * @example\n * const song = thunkV(\"Call me maybe...\");\n *\n * song(); //> \"Call me maybe...\"\n * thunkV(true)(); //> true\n * @see {@link thunkF}\n * @see https://en.wikipedia.org/wiki/Thunk\n * @param {any} val          - The value to return later.\n * @return {function(): any} - The thunk that returns the value.\n ",
      "start": 1039,
      "end": 1593,
      "loc": {
        "start": {
          "line": 43,
          "column": 0
        },
        "end": {
          "line": 58,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 22\n * @param\n * {undefined} f\n ",
      "start": 0,
      "end": 77,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 8,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n * Curried function that first takes a function, then returns another\n * function that accepts `f`'s arguments and lastly, returns a\n * function that takes no arguments and returns the application\n * of the provided arguments to `f`. This is useful for lazy\n * evaluation and delaying the execution of the function.\n * @example\n * describe(\"myFunc\", () => {\n *   it(\"should throw error\", () => {\n *     expect(thunkF(myFunc)(\"bad argument\"))\n *       .toThrowError(BadArgError);\n *   });\n * }); //! [PASS]\n *\n * thunkF(inc)(1)(); //> 2\n * @see {@link thunkV}\n * @param {function(args: ...any): any} f - A function to be called later.\n * @return {function(args: ...any): function(): any}\n * A function that takes no arguments and returns the result of calling f.\n ",
      "start": 78,
      "end": 856,
      "loc": {
        "start": {
          "line": 9,
          "column": 0
        },
        "end": {
          "line": 29,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 857,
      "end": 863,
      "loc": {
        "start": {
          "line": 30,
          "column": 0
        },
        "end": {
          "line": 30,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 864,
      "end": 872,
      "loc": {
        "start": {
          "line": 30,
          "column": 7
        },
        "end": {
          "line": 30,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "thunkF",
      "start": 873,
      "end": 879,
      "loc": {
        "start": {
          "line": 30,
          "column": 16
        },
        "end": {
          "line": 30,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 879,
      "end": 880,
      "loc": {
        "start": {
          "line": 30,
          "column": 22
        },
        "end": {
          "line": 30,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "f",
      "start": 880,
      "end": 881,
      "loc": {
        "start": {
          "line": 30,
          "column": 23
        },
        "end": {
          "line": 30,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 881,
      "end": 882,
      "loc": {
        "start": {
          "line": 30,
          "column": 24
        },
        "end": {
          "line": 30,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 883,
      "end": 884,
      "loc": {
        "start": {
          "line": 30,
          "column": 26
        },
        "end": {
          "line": 30,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 889,
      "end": 895,
      "loc": {
        "start": {
          "line": 31,
          "column": 4
        },
        "end": {
          "line": 31,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 896,
      "end": 904,
      "loc": {
        "start": {
          "line": 31,
          "column": 11
        },
        "end": {
          "line": 31,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "thunkF__",
      "start": 905,
      "end": 913,
      "loc": {
        "start": {
          "line": 31,
          "column": 20
        },
        "end": {
          "line": 31,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 913,
      "end": 914,
      "loc": {
        "start": {
          "line": 31,
          "column": 28
        },
        "end": {
          "line": 31,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": "...",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 914,
      "end": 917,
      "loc": {
        "start": {
          "line": 31,
          "column": 29
        },
        "end": {
          "line": 31,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "args",
      "start": 917,
      "end": 921,
      "loc": {
        "start": {
          "line": 31,
          "column": 32
        },
        "end": {
          "line": 31,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 921,
      "end": 922,
      "loc": {
        "start": {
          "line": 31,
          "column": 36
        },
        "end": {
          "line": 31,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 923,
      "end": 924,
      "loc": {
        "start": {
          "line": 31,
          "column": 38
        },
        "end": {
          "line": 31,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 933,
      "end": 939,
      "loc": {
        "start": {
          "line": 32,
          "column": 8
        },
        "end": {
          "line": 32,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 940,
      "end": 941,
      "loc": {
        "start": {
          "line": 32,
          "column": 15
        },
        "end": {
          "line": 32,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 941,
      "end": 942,
      "loc": {
        "start": {
          "line": 32,
          "column": 16
        },
        "end": {
          "line": 32,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "=>",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 943,
      "end": 945,
      "loc": {
        "start": {
          "line": 32,
          "column": 18
        },
        "end": {
          "line": 32,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "f",
      "start": 946,
      "end": 947,
      "loc": {
        "start": {
          "line": 32,
          "column": 21
        },
        "end": {
          "line": 32,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 947,
      "end": 948,
      "loc": {
        "start": {
          "line": 32,
          "column": 22
        },
        "end": {
          "line": 32,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "...",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 948,
      "end": 951,
      "loc": {
        "start": {
          "line": 32,
          "column": 23
        },
        "end": {
          "line": 32,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "args",
      "start": 951,
      "end": 955,
      "loc": {
        "start": {
          "line": 32,
          "column": 26
        },
        "end": {
          "line": 32,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 955,
      "end": 956,
      "loc": {
        "start": {
          "line": 32,
          "column": 30
        },
        "end": {
          "line": 32,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 956,
      "end": 957,
      "loc": {
        "start": {
          "line": 32,
          "column": 31
        },
        "end": {
          "line": 32,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 962,
      "end": 963,
      "loc": {
        "start": {
          "line": 33,
          "column": 4
        },
        "end": {
          "line": 33,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 963,
      "end": 964,
      "loc": {
        "start": {
          "line": 33,
          "column": 5
        },
        "end": {
          "line": 33,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 965,
      "end": 966,
      "loc": {
        "start": {
          "line": 34,
          "column": 0
        },
        "end": {
          "line": 34,
          "column": 1
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 44\n * @param\n * {T} val\n ",
      "start": 967,
      "end": 1038,
      "loc": {
        "start": {
          "line": 35,
          "column": 0
        },
        "end": {
          "line": 42,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n * Takes any value or reference and returns a callable function\n * that takes no arguments and returns that very same value.\n * In functional programming this is called a **thunk**,\n * and it's very useful for lazy evaluation.\n * @example\n * const song = thunkV(\"Call me maybe...\");\n *\n * song(); //> \"Call me maybe...\"\n * thunkV(true)(); //> true\n * @see {@link thunkF}\n * @see https://en.wikipedia.org/wiki/Thunk\n * @param {any} val          - The value to return later.\n * @return {function(): any} - The thunk that returns the value.\n ",
      "start": 1039,
      "end": 1593,
      "loc": {
        "start": {
          "line": 43,
          "column": 0
        },
        "end": {
          "line": 58,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 1594,
      "end": 1600,
      "loc": {
        "start": {
          "line": 59,
          "column": 0
        },
        "end": {
          "line": 59,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 1601,
      "end": 1609,
      "loc": {
        "start": {
          "line": 59,
          "column": 7
        },
        "end": {
          "line": 59,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "thunkV",
      "start": 1610,
      "end": 1616,
      "loc": {
        "start": {
          "line": 59,
          "column": 16
        },
        "end": {
          "line": 59,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1616,
      "end": 1617,
      "loc": {
        "start": {
          "line": 59,
          "column": 22
        },
        "end": {
          "line": 59,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "val",
      "start": 1617,
      "end": 1620,
      "loc": {
        "start": {
          "line": 59,
          "column": 23
        },
        "end": {
          "line": 59,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1620,
      "end": 1621,
      "loc": {
        "start": {
          "line": 59,
          "column": 26
        },
        "end": {
          "line": 59,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1622,
      "end": 1623,
      "loc": {
        "start": {
          "line": 59,
          "column": 28
        },
        "end": {
          "line": 59,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 1628,
      "end": 1634,
      "loc": {
        "start": {
          "line": 60,
          "column": 4
        },
        "end": {
          "line": 60,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1635,
      "end": 1636,
      "loc": {
        "start": {
          "line": 60,
          "column": 11
        },
        "end": {
          "line": 60,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1636,
      "end": 1637,
      "loc": {
        "start": {
          "line": 60,
          "column": 12
        },
        "end": {
          "line": 60,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "=>",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1638,
      "end": 1640,
      "loc": {
        "start": {
          "line": 60,
          "column": 14
        },
        "end": {
          "line": 60,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "val",
      "start": 1641,
      "end": 1644,
      "loc": {
        "start": {
          "line": 60,
          "column": 17
        },
        "end": {
          "line": 60,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1644,
      "end": 1645,
      "loc": {
        "start": {
          "line": 60,
          "column": 20
        },
        "end": {
          "line": 60,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1646,
      "end": 1647,
      "loc": {
        "start": {
          "line": 61,
          "column": 0
        },
        "end": {
          "line": 61,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1648,
      "end": 1648,
      "loc": {
        "start": {
          "line": 62,
          "column": 0
        },
        "end": {
          "line": 62,
          "column": 0
        }
      }
    }
  ]
}